rule UMLClass2Node 
	transform c : TUML!Class
	to n : Graph!Node {
	
	n.name = c.name;
	
	// If t is not the top tree
	// create an edge connecting n
	// with the Node created from t's parent
	//if (t.parent.isDefined()) {
	//	var e : new Graph!Edge;
	//	e.source ::= t.parent;
	//	e.target = n;
	//}	
}

rule UMLAssociation2Edge
	transform a: TUML!Association
	to e: Graph!Edge {
	
	e.label = a.name;
	
	e.source ::= a.ownedEnd.first().type;
	e.target ::= a.ownedEnd.last().type;
//	var src = a.ownedEnd.first().type.equivalent();
//	var tgt = a.ownedEnd.last().type.equivalent();
	
//	e.source = src;
//	e.target = tgt;
	
	
}